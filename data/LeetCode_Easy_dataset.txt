Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0
Given an integer x, return true if x is palindrome integer. 
Given a roman numeral, convert it to an integer.
Write a function to find the longest common prefix string amongst an array of strings. If there is no common prefix, return an empty string "".
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. An input string is valid if: Open brackets must be closed by the same type of brackets. Open brackets must be closed in the correct order.
Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.
Given a sorted array nums, remove the duplicates in-place such that each element appears only once and returns the new length.
Given an array nums and a value val, remove all instances of that value in-place and return the new length.
Return the index of the first occurrence of String needle in String haystack, or -1 if needle is not part of haystack.
Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.
Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.
Given a string s consists of some words separated by spaces, return the length of the last word in the string. If the last word does not exist, return 0.
Given a non-empty array of decimal digits representing a non-negative integer, increment one to the integer.
Given two binary strings a and b, return their sum as a binary string.
Given a non-negative integer x, compute and return the square root of x.
You are climbing a staircase. It takes integer n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?
Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.
Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.
Given the roots of two binary trees p and q, write a function to check if they are the same or not.
Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).
Given the root of a binary tree, return its maximum depth. A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
Given an integer array nums where the elements are sorted in ascending order, convert it to a height-balanced binary search tree.
Given a binary tree, determine if it is height-balanced. For this problem, a height-balanced binary tree is defined as:
Given a binary tree, find its minimum depth. The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.
Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum.
Given a non-negative integer numRows, generate the first numRows of Pascal's triangle. In Pascal's triangle, each number is the sum of the two numbers directly above it.
Given an integer rowIndex, return the rowIndexth row of the Pascal's triangle. Notice that the row index starts from 0.
You are given an array prices where prices[i] is the price of a given stock on the ith day. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.
Say you have an array prices for which the ith element is the price of a given stock on day i. Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).
Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.
Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.
Given head, the head of a linked list, determine if the linked list has a cycle in it.
Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.
Write a program to find the node at which the intersection of two singly linked lists begins.
Given an array of integers numbers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.
Given a positive integer, return its corresponding column title as appear in an Excel sheet.
Given an array nums of size n, return the majority element. The majority element is the element that appears more than floor(n / 2) times. You may assume that the majority element always exists in the array.
Given a column title as appear in an Excel sheet, return its corresponding column number.
Given an integer n, return the number of trailing zeroes in n!.
Reverse bits of a given 32 bits unsigned integer.
Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight).
Write an algorithm to determine if a number n is happy. Starting with any positive integer, replace the number by the sum of the squares of its digits. Write an algorithm to determine if a number n is happy. Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy.
Remove all elements from a linked list of integers that have value val.
Count the number of prime numbers less than a non-negative number, n.
Given two strings s and t, determine if they are isomorphic. Two strings s and t are isomorphic if the characters in s can be replaced to get t.
Given the head of a singly linked list, reverse the list, and return the reversed list.
Given an array of integers, find if the array contains any duplicates. Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.
Given an array of integers and an integer k, find out whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the absolute difference between i and j is at most k.
Invert a binary tree.